/*!
 * deforayDualBox
 * @version 2.6.2
 * @license MIT
 * Dual listbox jQuery plugin
 * Forked from crlcu/multiselect v2.5.6
 * (c) 2016–2020 Adrian Crisan — maintained by Deforay Technologies
 */
!function (t) { "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery) }(function (t) { "use strict"; if (void 0 === t) throw new Error("deforayDualBox requires jQuery"); let e = function (t) { function e(e, o) { o = o || {}; const n = e.prop("id") || "deforayDualBox_" + Math.random().toString(36).slice(2); if (e.prop("id") || e.prop("id", n), this.$left = e, this.$right = t(o.right).length ? t(o.right) : t("#" + n + "_to"), this.actions = { $leftAll: t(o.leftAll).length ? t(o.leftAll) : t("#" + n + "_leftAll"), $rightAll: t(o.rightAll).length ? t(o.rightAll) : t("#" + n + "_rightAll"), $leftSelected: t(o.leftSelected).length ? t(o.leftSelected) : t("#" + n + "_leftSelected"), $rightSelected: t(o.rightSelected).length ? t(o.rightSelected) : t("#" + n + "_rightSelected"), $undo: t(o.undo).length ? t(o.undo) : t("#" + n + "_undo"), $redo: t(o.redo).length ? t(o.redo) : t("#" + n + "_redo"), $moveUp: t(o.moveUp).length ? t(o.moveUp) : t("#" + n + "_move_up"), $moveDown: t(o.moveDown).length ? t(o.moveDown) : t("#" + n + "_move_down") }, delete o.leftAll, delete o.leftSelected, delete o.right, delete o.rightAll, delete o.rightSelected, delete o.undo, delete o.redo, delete o.moveUp, delete o.moveDown, this.options = { keepRenderingSort: o.keepRenderingSort, submitAllLeft: void 0 === o.submitAllLeft || o.submitAllLeft, submitAllRight: void 0 === o.submitAllRight || o.submitAllRight, search: o.search, ignoreDisabled: void 0 !== o.ignoreDisabled && o.ignoreDisabled, matchOptgroupBy: void 0 !== o.matchOptgroupBy ? o.matchOptgroupBy : "label", autoSelectNext: void 0 !== o.autoSelectNext && o.autoSelectNext, updateCounts: "function" == typeof o.updateCounts ? o.updateCounts : function (e, o) { t("#unselectedCount").html(e.find("option").length), t("#selectedCount").html(o.find("option").length) } }, delete o.keepRenderingSort, this.callbacks = o, "function" == typeof this.callbacks.sort) { const t = this.callbacks.sort; this.callbacks.sort = { left: t, right: t } } this.init() } return e.prototype = { init: function () { const e = this; e.undoStack = [], e.redoStack = [], e.options.keepRenderingSort && (e.skipInitSort = !0, !1 !== e.callbacks.sort && (e.callbacks.sort = { left: (e, o) => t(e).data("position") > t(o).data("position") ? 1 : -1, right: (e, o) => t(e).data("position") > t(o).data("position") ? 1 : -1 }), e.$left.attachIndex(), e.$right.each((e, o) => t(o).attachIndex())), "function" == typeof e.callbacks.startUp && e.callbacks.startUp(e.$left, e.$right), e.skipInitSort || ("function" == typeof e.callbacks.sort.left && e.$left.mSort(e.callbacks.sort.left), "function" == typeof e.callbacks.sort.right && e.$right.each((o, n) => t(n).mSort(e.callbacks.sort.right))), "function" == typeof e.options.updateCounts && e.options.updateCounts(e.$left, e.$right), e.$left.trigger("dualbox:updateCounts", [e.$left, e.$right]), e.options.search && e.options.search.left && (e.options.search.$left = t(e.options.search.left), e.$left.before(e.options.search.$left)), e.options.search && e.options.search.right && (e.options.search.$right = t(e.options.search.right), e.$right.before(t(e.options.search.$right))), e.events(), "function" == typeof e.callbacks.afterInit && e.callbacks.afterInit() }, events: function () { const e = this; e.options.search && e.options.search.$left && e.options.search.$left.on("keyup", function (t) { e.callbacks.fireSearch(this.value) ? (e.$left.find('option:deforaySearch("' + this.value + '")').mShow(), e.$left.find('option:not(:deforaySearch("' + this.value + '"))').mHide(), e.$left.find("option").closest("optgroup").mHide(), e.$left.find("option:not(.hidden)").parent("optgroup").mShow()) : e.$left.find("option, optgroup").mShow() }), e.options.search && e.options.search.$right && e.options.search.$right.on("keyup", function (t) { e.callbacks.fireSearch(this.value) ? (e.$right.find('option:deforaySearch("' + this.value + '")').mShow(), e.$right.find('option:not(:deforaySearch("' + this.value + '"))').mHide(), e.$right.find("option").closest("optgroup").mHide(), e.$right.find("option:not(.hidden)").parent("optgroup").mShow()) : e.$right.find("option, optgroup").mShow() }), e.$right.closest("form").on("submit", function (t) { e.options.search && (e.options.search.$left && e.options.search.$left.val("").trigger("keyup"), e.options.search.$right && e.options.search.$right.val("").trigger("keyup")), e.$left.find("option").prop("selected", e.options.submitAllLeft), e.$right.find("option").prop("selected", e.options.submitAllRight) }), e.$left.on("dblclick", "option", function (o) { o.preventDefault(); const n = t(this); n.length && e.moveToRight(n, o) }), e.$left.on("click", "optgroup", function (e) { "OPTGROUP" === t(e.target).prop("tagName") && t(this).children().prop("selected", !0) }), e.$left.on("keypress", function (t) { if ("Enter" === t.key) { t.preventDefault(); const o = e.$left.find("option:selected:not(.hidden)"); o.length && e.moveToRight(o, t) } }), e.$right.on("dblclick", "option", function (o) { o.preventDefault(); const n = t(this); n.length && e.moveToLeft(n, o) }), e.$right.on("click", "optgroup", function (e) { "OPTGROUP" === t(e.target).prop("tagName") && t(this).children().prop("selected", !0) }), e.$right.on("keydown", function (t) { if (8 === t.keyCode || 46 === t.keyCode) { t.preventDefault(); const o = e.$right.find("option:selected:not(.hidden)"); o.length && e.moveToLeft(o, t) } }), e.actions.$rightSelected.on("click", function (o) { o.preventDefault(); const n = e.$left.find("option:selected:not(.hidden)"); n.length && e.moveToRight(n, o), t(this).blur() }), e.actions.$leftSelected.on("click", function (o) { o.preventDefault(); const n = e.$right.find("option:selected:not(.hidden)"); n.length && e.moveToLeft(n, o), t(this).blur() }), e.actions.$rightAll.on("click", function (o) { o.preventDefault(); const n = e.$left.children(":not(span):not(.hidden)"); n.length && e.moveToRight(n, o), t(this).blur() }), e.actions.$leftAll.on("click", function (o) { o.preventDefault(); const n = e.$right.children(":not(span):not(.hidden)"); n.length && e.moveToLeft(n, o), t(this).blur() }), e.actions.$undo.on("click", function (t) { t.preventDefault(), e.undo(t) }), e.actions.$redo.on("click", function (t) { t.preventDefault(), e.redo(t) }), e.actions.$moveUp.on("click", function (o) { o.preventDefault(); const n = e.$right.find(":selected:not(span):not(.hidden)"); n.length && e.moveUp(n, o), t(this).blur() }), e.actions.$moveDown.on("click", function (o) { o.preventDefault(); const n = e.$right.find(":selected:not(span):not(.hidden)"); n.length && e.moveDown(n, o), t(this).blur() }) }, moveToRight: function (t, e, o, n) { const i = this, r = i.$left.find("option:not(.hidden)").index(t.last()); if ("function" == typeof i.callbacks.beforeMoveToRight && !o && !i.callbacks.beforeMoveToRight(i.$left, i.$right, t)) return !1; if ("function" == typeof i.callbacks.moveToRight && i.callbacks.moveToRight(i, t, e, o, n), i.moveFromAtoB(i.$left, i.$right, t, e, o, n), n || (i.undoStack.push(["right", t]), i.redoStack = []), "function" != typeof i.callbacks.sort.right || o || i.doNotSortRight || i.$right.mSort(i.callbacks.sort.right), "function" != typeof i.callbacks.afterMoveToRight || o || i.callbacks.afterMoveToRight(i.$left, i.$right, t), "function" != typeof i.options.updateCounts || o || i.options.updateCounts(i.$left, i.$right), i.$left.trigger("dualbox:updateCounts", [i.$left, i.$right]), i.options.autoSelectNext && !o) { const t = i.$left.find("option:not(.hidden)"); if (t.length) { const e = Math.min(Math.max(r, 0), t.length - 1); t.prop("selected", !1), t.eq(e).prop("selected", !0).focus() } } return i }, moveToLeft: function (t, e, o, n) { const i = this, r = i.$right.find("option:not(.hidden)").index(t.last()); if ("function" == typeof i.callbacks.beforeMoveToLeft && !o && !i.callbacks.beforeMoveToLeft(i.$left, i.$right, t)) return !1; if (i.moveFromAtoB(i.$right, i.$left, t, e, o, n), n || (i.undoStack.push(["left", t]), i.redoStack = []), "function" != typeof i.callbacks.sort.left || o || i.$left.mSort(i.callbacks.sort.left), "function" != typeof i.callbacks.afterMoveToLeft || o || i.callbacks.afterMoveToLeft(i.$left, i.$right, t), "function" != typeof i.options.updateCounts || o || i.options.updateCounts(i.$left, i.$right), i.$left.trigger("dualbox:updateCounts", [i.$left, i.$right]), i.options.autoSelectNext && !o) { const t = i.$right.find("option:not(.hidden)"); if (t.length) { const e = Math.min(Math.max(r, 0), t.length - 1); t.prop("selected", !1), t.eq(e).prop("selected", !0).focus() } } return i }, moveFromAtoB: function (e, o, n, i, r, l) { const c = this; return "function" == typeof c.callbacks.moveFromAtoB ? c.callbacks.moveFromAtoB(c, e, o, n, i, r, l) : (n.each(function (e, n) { const i = t(n); if (c.options.ignoreDisabled && i.is(":disabled")) return !0; if (i.is("optgroup") || i.parent().is("optgroup")) { let t = i.is("optgroup") ? i : i.parent(); const e = c.options.matchOptgroupBy, n = `optgroup[${e}="${t.prop(e)}"]`; let r = o.find(n); if (r.length || (r = t.clone(!0), r.empty(), o.move(r)), i.is("optgroup")) { let t = ""; c.options.ignoreDisabled && (t = ":not(:disabled)"), r.move(i.find("option" + t)) } else r.move(i); t.removeIfEmpty() } else o.move(i) }), c) }, moveUp: function (t) { const e = this; return !("function" == typeof e.callbacks.beforeMoveUp && !e.callbacks.beforeMoveUp(t)) && (t.first().prev().before(t), "function" == typeof e.callbacks.afterMoveUp && e.callbacks.afterMoveUp(t), this) }, moveDown: function (t) { const e = this; return !("function" == typeof e.callbacks.beforeMoveDown && !e.callbacks.beforeMoveDown(t)) && (t.last().next().after(t), "function" == typeof e.callbacks.afterMoveDown && e.callbacks.afterMoveDown(t), this) }, undo: function (t) { const e = this; let o = e.undoStack.pop(); if (o) switch (e.redoStack.push(o), o[0]) { case "left": e.moveToRight(o[1], t, !1, !0); break; case "right": e.moveToLeft(o[1], t, !1, !0) } }, redo: function (t) { const e = this; let o = e.redoStack.pop(); if (o) switch (e.undoStack.push(o), o[0]) { case "left": e.moveToLeft(o[1], t, !1, !0); break; case "right": e.moveToRight(o[1], t, !1, !0) } } }, e }(t); t.deforayDualBox = { defaults: { startUp: function (e, o) { o.find("option").each(function (o, n) { if ("OPTGROUP" === t(n).parent().prop("tagName")) { let o = 'optgroup[label="' + t(n).parent().attr("label") + '"]'; e.find(o + ' option[value="' + n.value + '"]').each(function (t, e) { e.remove() }), e.find(o).removeIfEmpty() } else e.find('option[value="' + n.value + '"]').remove() }) }, afterInit: function () { return !0 }, beforeMoveToRight: function (t, e, o) { return !0 }, afterMoveToRight: function (t, e, o) { }, beforeMoveToLeft: function (t, e, o) { return !0 }, afterMoveToLeft: function (t, e, o) { }, beforeMoveUp: function (t) { return !0 }, afterMoveUp: function (t) { }, beforeMoveDown: function (t) { return !0 }, afterMoveDown: function (t) { }, sort: function (t, e) { return "NA" === t.innerHTML ? 1 : "NA" === e.innerHTML ? -1 : t.innerHTML > e.innerHTML ? 1 : -1 }, fireSearch: function (t) { return t.length > 1 } } }, t.fn.deforayDualBox || (t.fn.deforayDualBox = function (o) { let n; return this.each(function () { const i = t(this); let r = i.data("deforay.dualbox"); const l = t.extend({}, t.deforayDualBox.defaults, i.data(), "object" == typeof o && o); r || i.data("deforay.dualbox", r = new e(i, l)), n || (n = r) }), n || this }, t.fn.move = function (t) { return this.append(t).find("option").prop("selected", !1), this }, t.fn.removeIfEmpty = function () { return this.children().length || this.remove(), this }, t.fn.mShow = function () { return this.removeClass("hidden").show() }, t.fn.mHide = function () { return this.addClass("hidden").hide() }, t.fn.mSort = function (e) { return this.children().sort(e).appendTo(this), this.find("optgroup").each((o, n) => t(n).children().sort(e).appendTo(n)), this }, t.fn.attachIndex = function () { return this.children().each(function (e, o) { let n = t(o); n.is("optgroup") && n.children().each(function (e, o) { t(o).data("position", e) }), n.data("position", e) }), this }, t.expr[":"].deforaySearch || (t.expr[":"].deforaySearch = function (e, o, n) { const i = (n[3] ?? "").toString().replace(/^["']|["']$/g, "").toLowerCase(); return t(e).text().toLowerCase().includes(i) }), t.deforayDualBox.version = "2.6.2") });