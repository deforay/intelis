name: Build Vendor Package

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'composer.json'
      - 'composer.lock'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild even without changes'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  check_changes:
    name: Check for Composer Changes
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check_composer.outputs.should_build }}
      composer_hash: ${{ steps.composer_hash.outputs.hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for composer changes
        id: check_composer
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger detected"
            if [ "${{ inputs.force_build }}" == "true" ]; then
              echo "Force build requested"
              echo "should_build=true" >> $GITHUB_OUTPUT
            else
              if git diff --name-only HEAD^ HEAD | grep -qE "composer\.(json|lock)"; then
                echo "Changes detected in composer files"
                echo "should_build=true" >> $GITHUB_OUTPUT
              else
                echo "No changes detected, but manual trigger allows build"
                echo "should_build=true" >> $GITHUB_OUTPUT
              fi
            fi
          elif git diff --name-only HEAD^ HEAD | grep -qE "composer\.(json|lock)"; then
            echo "Changes detected in composer files"
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in composer files, skipping build"
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate composer hash
        id: composer_hash
        run: |
          HASH=$(cat composer.json composer.lock | sha256sum | cut -d' ' -f1 | cut -c1-8)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          echo "Generated hash: $HASH"

  build:
    name: Build Vendor Package
    needs: check_changes
    if: needs.check_changes.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    env:
      PHP_VERSION: '8.2'
      PACKAGE_NAME: 'vendor.tar.gz'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: gd, zip, pdo, json, curl, gettext, openssl, fileinfo, sodium, zlib, intl, bcmath
          tools: composer:v2
          coverage: none

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Validate composer files
        run: composer validate --strict --no-check-publish

      - name: Install dependencies
        run: |
          composer install \
            --no-dev \
            --prefer-dist \
            --no-progress \
            --no-interaction \
            --optimize-autoloader \
            --classmap-authoritative

      - name: Clean vendor directory
        run: |
          echo "Original vendor size:"
          du -sh vendor/
          
          # Remove unnecessary files to reduce size
          find vendor -type d -name ".git" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name "tests" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name "Tests" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name "test" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name "docs" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name "doc" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name ".github" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type d -name "examples" -exec rm -rf {} + 2>/dev/null || true
          find vendor -type f -name "*.md" -delete 2>/dev/null || true
          find vendor -type f -name ".gitignore" -delete 2>/dev/null || true
          find vendor -type f -name ".gitattributes" -delete 2>/dev/null || true
          find vendor -type f -name "phpunit.xml*" -delete 2>/dev/null || true
          find vendor -type f -name ".travis.yml" -delete 2>/dev/null || true
          
          echo "Cleaned vendor size:"
          du -sh vendor/

      - name: Create vendor package
        run: |
          echo "Creating package: ${{ env.PACKAGE_NAME }}"
          
          tar -czf "${{ env.PACKAGE_NAME }}" vendor/
          
          # Generate checksums
          md5sum "${{ env.PACKAGE_NAME }}" > "${{ env.PACKAGE_NAME }}.md5"
          sha256sum "${{ env.PACKAGE_NAME }}" > "${{ env.PACKAGE_NAME }}.sha256"
          
          echo "Package created successfully"
          ls -lh *.tar.gz
          echo ""
          echo "MD5: $(cat ${{ env.PACKAGE_NAME }}.md5)"
          echo "SHA256: $(cat ${{ env.PACKAGE_NAME }}.sha256)"
          
          # Store package size for summary
          echo "PACKAGE_SIZE=$(du -h ${{ env.PACKAGE_NAME }} | cut -f1)" >> $GITHUB_ENV

      - name: Upload vendor package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vendor-package
          path: |
            ${{ env.PACKAGE_NAME }}
            ${{ env.PACKAGE_NAME }}.md5
            ${{ env.PACKAGE_NAME }}.sha256
          retention-days: 90
          compression-level: 0

      - name: Generate release notes
        id: release_notes
        run: |
          cat << EOF > release_notes.md
          ## Vendor Package Information
          
          **Build Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Commit:** \`${{ github.sha }}\`
          **Branch:** \`${{ github.ref_name }}\`
          **PHP Version:** ${{ env.PHP_VERSION }}
          **Package Size:** ${{ env.PACKAGE_SIZE }}
          **Composer Hash:** \`${{ needs.check_changes.outputs.composer_hash }}\`
          
          ### Checksums
          
          **MD5:** \`$(cat ${{ env.PACKAGE_NAME }}.md5 | cut -d' ' -f1)\`
          **SHA256:** \`$(cat ${{ env.PACKAGE_NAME }}.sha256 | cut -d' ' -f1)\`
          
          ### Installation
          
          \`\`\`bash
          # Download
          wget https://github.com/${{ github.repository }}/releases/download/vendor-latest/vendor.tar.gz
          
          # Verify (optional)
          wget https://github.com/${{ github.repository }}/releases/download/vendor-latest/vendor.tar.gz.sha256
          sha256sum -c vendor.tar.gz.sha256
          
          # Extract
          tar -xzf vendor.tar.gz
          \`\`\`
          
          ### Changes in this build
          
          \`\`\`
          $(git log -1 --pretty=format:"%h - %s (%an, %ar)")
          \`\`\`
          EOF

      - name: Create or update release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: vendor-latest
          name: Latest Vendor Package
          body_path: release_notes.md
          files: |
            ${{ env.PACKAGE_NAME }}
            ${{ env.PACKAGE_NAME }}.md5
            ${{ env.PACKAGE_NAME }}.sha256
          draft: false
          prerelease: false

      - name: Cleanup old releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 5
          delete_tag_pattern: vendor-

      - name: Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Vendor package built successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** \`${{ env.PACKAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Size:** ${{ env.PACKAGE_SIZE }}" >> $GITHUB_STEP_SUMMARY
          echo "**Hash:** \`${{ needs.check_changes.outputs.composer_hash }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ [Download Release](https://github.com/${{ github.repository }}/releases/tag/vendor-latest)" >> $GITHUB_STEP_SUMMARY